/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.wibidata.wikimedia.avro;  
@SuppressWarnings("all")
/** Info about the templates contained in the whole page. */
@org.apache.avro.specific.AvroGenerated
public class TemplateRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TemplateRecord\",\"namespace\":\"com.wibidata.wikimedia.avro\",\"doc\":\"Info about the templates contained in the whole page.\",\"fields\":[{\"name\":\"templateText\",\"type\":\"string\",\"doc\":\"The text contained inside of an outermost pair of curly braces, inclusive.\"},{\"name\":\"startOffset\",\"type\":\"long\",\"doc\":\"The offset into the revision text where the template begins.\"},{\"name\":\"endOffset\",\"type\":\"long\",\"doc\":\"The offset into the revision text of the last template character.\"}],\"aliases\":[\"com.odiago.wikimedia.avro.TemplateRecord\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The text contained inside of an outermost pair of curly braces, inclusive. */
  @Deprecated public java.lang.CharSequence templateText;
  /** The offset into the revision text where the template begins. */
  @Deprecated public long startOffset;
  /** The offset into the revision text of the last template character. */
  @Deprecated public long endOffset;

  /**
   * Default constructor.
   */
  public TemplateRecord() {}

  /**
   * All-args constructor.
   */
  public TemplateRecord(java.lang.CharSequence templateText, java.lang.Long startOffset, java.lang.Long endOffset) {
    this.templateText = templateText;
    this.startOffset = startOffset;
    this.endOffset = endOffset;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return templateText;
    case 1: return startOffset;
    case 2: return endOffset;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: templateText = (java.lang.CharSequence)value$; break;
    case 1: startOffset = (java.lang.Long)value$; break;
    case 2: endOffset = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'templateText' field.
   * The text contained inside of an outermost pair of curly braces, inclusive.   */
  public java.lang.CharSequence getTemplateText() {
    return templateText;
  }

  /**
   * Sets the value of the 'templateText' field.
   * The text contained inside of an outermost pair of curly braces, inclusive.   * @param value the value to set.
   */
  public void setTemplateText(java.lang.CharSequence value) {
    this.templateText = value;
  }

  /**
   * Gets the value of the 'startOffset' field.
   * The offset into the revision text where the template begins.   */
  public java.lang.Long getStartOffset() {
    return startOffset;
  }

  /**
   * Sets the value of the 'startOffset' field.
   * The offset into the revision text where the template begins.   * @param value the value to set.
   */
  public void setStartOffset(java.lang.Long value) {
    this.startOffset = value;
  }

  /**
   * Gets the value of the 'endOffset' field.
   * The offset into the revision text of the last template character.   */
  public java.lang.Long getEndOffset() {
    return endOffset;
  }

  /**
   * Sets the value of the 'endOffset' field.
   * The offset into the revision text of the last template character.   * @param value the value to set.
   */
  public void setEndOffset(java.lang.Long value) {
    this.endOffset = value;
  }

  /** Creates a new TemplateRecord RecordBuilder */
  public static com.wibidata.wikimedia.avro.TemplateRecord.Builder newBuilder() {
    return new com.wibidata.wikimedia.avro.TemplateRecord.Builder();
  }
  
  /** Creates a new TemplateRecord RecordBuilder by copying an existing Builder */
  public static com.wibidata.wikimedia.avro.TemplateRecord.Builder newBuilder(com.wibidata.wikimedia.avro.TemplateRecord.Builder other) {
    return new com.wibidata.wikimedia.avro.TemplateRecord.Builder(other);
  }
  
  /** Creates a new TemplateRecord RecordBuilder by copying an existing TemplateRecord instance */
  public static com.wibidata.wikimedia.avro.TemplateRecord.Builder newBuilder(com.wibidata.wikimedia.avro.TemplateRecord other) {
    return new com.wibidata.wikimedia.avro.TemplateRecord.Builder(other);
  }
  
  /**
   * RecordBuilder for TemplateRecord instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TemplateRecord>
    implements org.apache.avro.data.RecordBuilder<TemplateRecord> {

    private java.lang.CharSequence templateText;
    private long startOffset;
    private long endOffset;

    /** Creates a new Builder */
    private Builder() {
      super(com.wibidata.wikimedia.avro.TemplateRecord.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.wibidata.wikimedia.avro.TemplateRecord.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing TemplateRecord instance */
    private Builder(com.wibidata.wikimedia.avro.TemplateRecord other) {
            super(com.wibidata.wikimedia.avro.TemplateRecord.SCHEMA$);
      if (isValidValue(fields()[0], other.templateText)) {
        this.templateText = data().deepCopy(fields()[0].schema(), other.templateText);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.startOffset)) {
        this.startOffset = data().deepCopy(fields()[1].schema(), other.startOffset);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.endOffset)) {
        this.endOffset = data().deepCopy(fields()[2].schema(), other.endOffset);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'templateText' field */
    public java.lang.CharSequence getTemplateText() {
      return templateText;
    }
    
    /** Sets the value of the 'templateText' field */
    public com.wibidata.wikimedia.avro.TemplateRecord.Builder setTemplateText(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.templateText = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'templateText' field has been set */
    public boolean hasTemplateText() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'templateText' field */
    public com.wibidata.wikimedia.avro.TemplateRecord.Builder clearTemplateText() {
      templateText = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'startOffset' field */
    public java.lang.Long getStartOffset() {
      return startOffset;
    }
    
    /** Sets the value of the 'startOffset' field */
    public com.wibidata.wikimedia.avro.TemplateRecord.Builder setStartOffset(long value) {
      validate(fields()[1], value);
      this.startOffset = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'startOffset' field has been set */
    public boolean hasStartOffset() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'startOffset' field */
    public com.wibidata.wikimedia.avro.TemplateRecord.Builder clearStartOffset() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'endOffset' field */
    public java.lang.Long getEndOffset() {
      return endOffset;
    }
    
    /** Sets the value of the 'endOffset' field */
    public com.wibidata.wikimedia.avro.TemplateRecord.Builder setEndOffset(long value) {
      validate(fields()[2], value);
      this.endOffset = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'endOffset' field has been set */
    public boolean hasEndOffset() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'endOffset' field */
    public com.wibidata.wikimedia.avro.TemplateRecord.Builder clearEndOffset() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public TemplateRecord build() {
      try {
        TemplateRecord record = new TemplateRecord();
        record.templateText = fieldSetFlags()[0] ? this.templateText : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.startOffset = fieldSetFlags()[1] ? this.startOffset : (java.lang.Long) defaultValue(fields()[1]);
        record.endOffset = fieldSetFlags()[2] ? this.endOffset : (java.lang.Long) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
