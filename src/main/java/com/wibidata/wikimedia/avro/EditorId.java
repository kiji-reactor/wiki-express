/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.wibidata.wikimedia.avro;  
@SuppressWarnings("all")
/** Identifying data known for an editor. */
@org.apache.avro.specific.AvroGenerated
public class EditorId extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EditorId\",\"namespace\":\"com.wibidata.wikimedia.avro\",\"doc\":\"Identifying data known for an editor.\",\"fields\":[{\"name\":\"idType\",\"type\":{\"type\":\"enum\",\"name\":\"IdTypes\",\"symbols\":[\"UNAME\",\"IP\",\"UNKNOWN\"],\"aliases\":[\"com.odiago.wikimedia.avro.IdTypes\"]},\"doc\":\"The type of this identifier, user name, user ip, or unknown.\"},{\"name\":\"username\",\"type\":[\"null\",\"string\"],\"doc\":\"Username for registered contributor.\"},{\"name\":\"userId\",\"type\":[\"null\",\"long\"],\"doc\":\"User ID (comes with username) of registered contributor.\"},{\"name\":\"ip\",\"type\":[\"null\",\"string\"],\"doc\":\"IP address of anonymous contributor.\"}],\"aliases\":[\"com.odiago.wikimedia.avro.EditorId\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The type of this identifier, user name, user ip, or unknown. */
  @Deprecated public com.wibidata.wikimedia.avro.IdTypes idType;
  /** Username for registered contributor. */
  @Deprecated public java.lang.CharSequence username;
  /** User ID (comes with username) of registered contributor. */
  @Deprecated public java.lang.Long userId;
  /** IP address of anonymous contributor. */
  @Deprecated public java.lang.CharSequence ip;

  /**
   * Default constructor.
   */
  public EditorId() {}

  /**
   * All-args constructor.
   */
  public EditorId(com.wibidata.wikimedia.avro.IdTypes idType, java.lang.CharSequence username, java.lang.Long userId, java.lang.CharSequence ip) {
    this.idType = idType;
    this.username = username;
    this.userId = userId;
    this.ip = ip;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return idType;
    case 1: return username;
    case 2: return userId;
    case 3: return ip;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: idType = (com.wibidata.wikimedia.avro.IdTypes)value$; break;
    case 1: username = (java.lang.CharSequence)value$; break;
    case 2: userId = (java.lang.Long)value$; break;
    case 3: ip = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'idType' field.
   * The type of this identifier, user name, user ip, or unknown.   */
  public com.wibidata.wikimedia.avro.IdTypes getIdType() {
    return idType;
  }

  /**
   * Sets the value of the 'idType' field.
   * The type of this identifier, user name, user ip, or unknown.   * @param value the value to set.
   */
  public void setIdType(com.wibidata.wikimedia.avro.IdTypes value) {
    this.idType = value;
  }

  /**
   * Gets the value of the 'username' field.
   * Username for registered contributor.   */
  public java.lang.CharSequence getUsername() {
    return username;
  }

  /**
   * Sets the value of the 'username' field.
   * Username for registered contributor.   * @param value the value to set.
   */
  public void setUsername(java.lang.CharSequence value) {
    this.username = value;
  }

  /**
   * Gets the value of the 'userId' field.
   * User ID (comes with username) of registered contributor.   */
  public java.lang.Long getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * User ID (comes with username) of registered contributor.   * @param value the value to set.
   */
  public void setUserId(java.lang.Long value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'ip' field.
   * IP address of anonymous contributor.   */
  public java.lang.CharSequence getIp() {
    return ip;
  }

  /**
   * Sets the value of the 'ip' field.
   * IP address of anonymous contributor.   * @param value the value to set.
   */
  public void setIp(java.lang.CharSequence value) {
    this.ip = value;
  }

  /** Creates a new EditorId RecordBuilder */
  public static com.wibidata.wikimedia.avro.EditorId.Builder newBuilder() {
    return new com.wibidata.wikimedia.avro.EditorId.Builder();
  }
  
  /** Creates a new EditorId RecordBuilder by copying an existing Builder */
  public static com.wibidata.wikimedia.avro.EditorId.Builder newBuilder(com.wibidata.wikimedia.avro.EditorId.Builder other) {
    return new com.wibidata.wikimedia.avro.EditorId.Builder(other);
  }
  
  /** Creates a new EditorId RecordBuilder by copying an existing EditorId instance */
  public static com.wibidata.wikimedia.avro.EditorId.Builder newBuilder(com.wibidata.wikimedia.avro.EditorId other) {
    return new com.wibidata.wikimedia.avro.EditorId.Builder(other);
  }
  
  /**
   * RecordBuilder for EditorId instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EditorId>
    implements org.apache.avro.data.RecordBuilder<EditorId> {

    private com.wibidata.wikimedia.avro.IdTypes idType;
    private java.lang.CharSequence username;
    private java.lang.Long userId;
    private java.lang.CharSequence ip;

    /** Creates a new Builder */
    private Builder() {
      super(com.wibidata.wikimedia.avro.EditorId.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.wibidata.wikimedia.avro.EditorId.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing EditorId instance */
    private Builder(com.wibidata.wikimedia.avro.EditorId other) {
            super(com.wibidata.wikimedia.avro.EditorId.SCHEMA$);
      if (isValidValue(fields()[0], other.idType)) {
        this.idType = data().deepCopy(fields()[0].schema(), other.idType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.username)) {
        this.username = data().deepCopy(fields()[1].schema(), other.username);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.userId)) {
        this.userId = data().deepCopy(fields()[2].schema(), other.userId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.ip)) {
        this.ip = data().deepCopy(fields()[3].schema(), other.ip);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'idType' field */
    public com.wibidata.wikimedia.avro.IdTypes getIdType() {
      return idType;
    }
    
    /** Sets the value of the 'idType' field */
    public com.wibidata.wikimedia.avro.EditorId.Builder setIdType(com.wibidata.wikimedia.avro.IdTypes value) {
      validate(fields()[0], value);
      this.idType = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'idType' field has been set */
    public boolean hasIdType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'idType' field */
    public com.wibidata.wikimedia.avro.EditorId.Builder clearIdType() {
      idType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'username' field */
    public java.lang.CharSequence getUsername() {
      return username;
    }
    
    /** Sets the value of the 'username' field */
    public com.wibidata.wikimedia.avro.EditorId.Builder setUsername(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.username = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'username' field has been set */
    public boolean hasUsername() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'username' field */
    public com.wibidata.wikimedia.avro.EditorId.Builder clearUsername() {
      username = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'userId' field */
    public java.lang.Long getUserId() {
      return userId;
    }
    
    /** Sets the value of the 'userId' field */
    public com.wibidata.wikimedia.avro.EditorId.Builder setUserId(java.lang.Long value) {
      validate(fields()[2], value);
      this.userId = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'userId' field has been set */
    public boolean hasUserId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'userId' field */
    public com.wibidata.wikimedia.avro.EditorId.Builder clearUserId() {
      userId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'ip' field */
    public java.lang.CharSequence getIp() {
      return ip;
    }
    
    /** Sets the value of the 'ip' field */
    public com.wibidata.wikimedia.avro.EditorId.Builder setIp(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.ip = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'ip' field has been set */
    public boolean hasIp() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'ip' field */
    public com.wibidata.wikimedia.avro.EditorId.Builder clearIp() {
      ip = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public EditorId build() {
      try {
        EditorId record = new EditorId();
        record.idType = fieldSetFlags()[0] ? this.idType : (com.wibidata.wikimedia.avro.IdTypes) defaultValue(fields()[0]);
        record.username = fieldSetFlags()[1] ? this.username : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.userId = fieldSetFlags()[2] ? this.userId : (java.lang.Long) defaultValue(fields()[2]);
        record.ip = fieldSetFlags()[3] ? this.ip : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
