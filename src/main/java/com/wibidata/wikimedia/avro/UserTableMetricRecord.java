/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.wibidata.wikimedia.avro;  
@SuppressWarnings("all")
/** User table revision metric record. */
@org.apache.avro.specific.AvroGenerated
public class UserTableMetricRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserTableMetricRecord\",\"namespace\":\"com.wibidata.wikimedia.avro\",\"doc\":\"User table revision metric record.\",\"fields\":[{\"name\":\"delta\",\"type\":\"long\",\"doc\":\"The metric being written, should match the column name qualifier.\"},{\"name\":\"deltaNoTemplates\",\"type\":[\"null\",\"long\"],\"doc\":\"The metric being written, should match the column name qualifier.\"},{\"name\":\"isReverted\",\"type\":\"boolean\",\"doc\":\"True if this revision was later reverted.\"},{\"name\":\"isReverting\",\"type\":\"boolean\",\"doc\":\"True if this revision reverts earlier revisions.\"},{\"name\":\"isOnlyInTemplates\",\"type\":\"boolean\",\"doc\":\"True if the edit takes place entirely inside of templates.\"},{\"name\":\"timestamp\",\"type\":\"long\",\"doc\":\"Timestamp.\"},{\"name\":\"revisionId\",\"type\":\"string\",\"doc\":\"The unique revision ID.\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** The metric being written, should match the column name qualifier. */
  @Deprecated public long delta;
  /** The metric being written, should match the column name qualifier. */
  @Deprecated public java.lang.Long deltaNoTemplates;
  /** True if this revision was later reverted. */
  @Deprecated public boolean isReverted;
  /** True if this revision reverts earlier revisions. */
  @Deprecated public boolean isReverting;
  /** True if the edit takes place entirely inside of templates. */
  @Deprecated public boolean isOnlyInTemplates;
  /** Timestamp. */
  @Deprecated public long timestamp;
  /** The unique revision ID. */
  @Deprecated public java.lang.CharSequence revisionId;

  /**
   * Default constructor.
   */
  public UserTableMetricRecord() {}

  /**
   * All-args constructor.
   */
  public UserTableMetricRecord(java.lang.Long delta, java.lang.Long deltaNoTemplates, java.lang.Boolean isReverted, java.lang.Boolean isReverting, java.lang.Boolean isOnlyInTemplates, java.lang.Long timestamp, java.lang.CharSequence revisionId) {
    this.delta = delta;
    this.deltaNoTemplates = deltaNoTemplates;
    this.isReverted = isReverted;
    this.isReverting = isReverting;
    this.isOnlyInTemplates = isOnlyInTemplates;
    this.timestamp = timestamp;
    this.revisionId = revisionId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return delta;
    case 1: return deltaNoTemplates;
    case 2: return isReverted;
    case 3: return isReverting;
    case 4: return isOnlyInTemplates;
    case 5: return timestamp;
    case 6: return revisionId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: delta = (java.lang.Long)value$; break;
    case 1: deltaNoTemplates = (java.lang.Long)value$; break;
    case 2: isReverted = (java.lang.Boolean)value$; break;
    case 3: isReverting = (java.lang.Boolean)value$; break;
    case 4: isOnlyInTemplates = (java.lang.Boolean)value$; break;
    case 5: timestamp = (java.lang.Long)value$; break;
    case 6: revisionId = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'delta' field.
   * The metric being written, should match the column name qualifier.   */
  public java.lang.Long getDelta() {
    return delta;
  }

  /**
   * Sets the value of the 'delta' field.
   * The metric being written, should match the column name qualifier.   * @param value the value to set.
   */
  public void setDelta(java.lang.Long value) {
    this.delta = value;
  }

  /**
   * Gets the value of the 'deltaNoTemplates' field.
   * The metric being written, should match the column name qualifier.   */
  public java.lang.Long getDeltaNoTemplates() {
    return deltaNoTemplates;
  }

  /**
   * Sets the value of the 'deltaNoTemplates' field.
   * The metric being written, should match the column name qualifier.   * @param value the value to set.
   */
  public void setDeltaNoTemplates(java.lang.Long value) {
    this.deltaNoTemplates = value;
  }

  /**
   * Gets the value of the 'isReverted' field.
   * True if this revision was later reverted.   */
  public java.lang.Boolean getIsReverted() {
    return isReverted;
  }

  /**
   * Sets the value of the 'isReverted' field.
   * True if this revision was later reverted.   * @param value the value to set.
   */
  public void setIsReverted(java.lang.Boolean value) {
    this.isReverted = value;
  }

  /**
   * Gets the value of the 'isReverting' field.
   * True if this revision reverts earlier revisions.   */
  public java.lang.Boolean getIsReverting() {
    return isReverting;
  }

  /**
   * Sets the value of the 'isReverting' field.
   * True if this revision reverts earlier revisions.   * @param value the value to set.
   */
  public void setIsReverting(java.lang.Boolean value) {
    this.isReverting = value;
  }

  /**
   * Gets the value of the 'isOnlyInTemplates' field.
   * True if the edit takes place entirely inside of templates.   */
  public java.lang.Boolean getIsOnlyInTemplates() {
    return isOnlyInTemplates;
  }

  /**
   * Sets the value of the 'isOnlyInTemplates' field.
   * True if the edit takes place entirely inside of templates.   * @param value the value to set.
   */
  public void setIsOnlyInTemplates(java.lang.Boolean value) {
    this.isOnlyInTemplates = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * Timestamp.   */
  public java.lang.Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * Timestamp.   * @param value the value to set.
   */
  public void setTimestamp(java.lang.Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'revisionId' field.
   * The unique revision ID.   */
  public java.lang.CharSequence getRevisionId() {
    return revisionId;
  }

  /**
   * Sets the value of the 'revisionId' field.
   * The unique revision ID.   * @param value the value to set.
   */
  public void setRevisionId(java.lang.CharSequence value) {
    this.revisionId = value;
  }

  /** Creates a new UserTableMetricRecord RecordBuilder */
  public static com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder newBuilder() {
    return new com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder();
  }
  
  /** Creates a new UserTableMetricRecord RecordBuilder by copying an existing Builder */
  public static com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder newBuilder(com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder other) {
    return new com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder(other);
  }
  
  /** Creates a new UserTableMetricRecord RecordBuilder by copying an existing UserTableMetricRecord instance */
  public static com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder newBuilder(com.wibidata.wikimedia.avro.UserTableMetricRecord other) {
    return new com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder(other);
  }
  
  /**
   * RecordBuilder for UserTableMetricRecord instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserTableMetricRecord>
    implements org.apache.avro.data.RecordBuilder<UserTableMetricRecord> {

    private long delta;
    private java.lang.Long deltaNoTemplates;
    private boolean isReverted;
    private boolean isReverting;
    private boolean isOnlyInTemplates;
    private long timestamp;
    private java.lang.CharSequence revisionId;

    /** Creates a new Builder */
    private Builder() {
      super(com.wibidata.wikimedia.avro.UserTableMetricRecord.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing UserTableMetricRecord instance */
    private Builder(com.wibidata.wikimedia.avro.UserTableMetricRecord other) {
            super(com.wibidata.wikimedia.avro.UserTableMetricRecord.SCHEMA$);
      if (isValidValue(fields()[0], other.delta)) {
        this.delta = data().deepCopy(fields()[0].schema(), other.delta);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.deltaNoTemplates)) {
        this.deltaNoTemplates = data().deepCopy(fields()[1].schema(), other.deltaNoTemplates);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.isReverted)) {
        this.isReverted = data().deepCopy(fields()[2].schema(), other.isReverted);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.isReverting)) {
        this.isReverting = data().deepCopy(fields()[3].schema(), other.isReverting);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.isOnlyInTemplates)) {
        this.isOnlyInTemplates = data().deepCopy(fields()[4].schema(), other.isOnlyInTemplates);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[5].schema(), other.timestamp);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.revisionId)) {
        this.revisionId = data().deepCopy(fields()[6].schema(), other.revisionId);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'delta' field */
    public java.lang.Long getDelta() {
      return delta;
    }
    
    /** Sets the value of the 'delta' field */
    public com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder setDelta(long value) {
      validate(fields()[0], value);
      this.delta = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'delta' field has been set */
    public boolean hasDelta() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'delta' field */
    public com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder clearDelta() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'deltaNoTemplates' field */
    public java.lang.Long getDeltaNoTemplates() {
      return deltaNoTemplates;
    }
    
    /** Sets the value of the 'deltaNoTemplates' field */
    public com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder setDeltaNoTemplates(java.lang.Long value) {
      validate(fields()[1], value);
      this.deltaNoTemplates = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'deltaNoTemplates' field has been set */
    public boolean hasDeltaNoTemplates() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'deltaNoTemplates' field */
    public com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder clearDeltaNoTemplates() {
      deltaNoTemplates = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'isReverted' field */
    public java.lang.Boolean getIsReverted() {
      return isReverted;
    }
    
    /** Sets the value of the 'isReverted' field */
    public com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder setIsReverted(boolean value) {
      validate(fields()[2], value);
      this.isReverted = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'isReverted' field has been set */
    public boolean hasIsReverted() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'isReverted' field */
    public com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder clearIsReverted() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'isReverting' field */
    public java.lang.Boolean getIsReverting() {
      return isReverting;
    }
    
    /** Sets the value of the 'isReverting' field */
    public com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder setIsReverting(boolean value) {
      validate(fields()[3], value);
      this.isReverting = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'isReverting' field has been set */
    public boolean hasIsReverting() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'isReverting' field */
    public com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder clearIsReverting() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'isOnlyInTemplates' field */
    public java.lang.Boolean getIsOnlyInTemplates() {
      return isOnlyInTemplates;
    }
    
    /** Sets the value of the 'isOnlyInTemplates' field */
    public com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder setIsOnlyInTemplates(boolean value) {
      validate(fields()[4], value);
      this.isOnlyInTemplates = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'isOnlyInTemplates' field has been set */
    public boolean hasIsOnlyInTemplates() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'isOnlyInTemplates' field */
    public com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder clearIsOnlyInTemplates() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'timestamp' field */
    public java.lang.Long getTimestamp() {
      return timestamp;
    }
    
    /** Sets the value of the 'timestamp' field */
    public com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder setTimestamp(long value) {
      validate(fields()[5], value);
      this.timestamp = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'timestamp' field has been set */
    public boolean hasTimestamp() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'timestamp' field */
    public com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder clearTimestamp() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'revisionId' field */
    public java.lang.CharSequence getRevisionId() {
      return revisionId;
    }
    
    /** Sets the value of the 'revisionId' field */
    public com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder setRevisionId(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.revisionId = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'revisionId' field has been set */
    public boolean hasRevisionId() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'revisionId' field */
    public com.wibidata.wikimedia.avro.UserTableMetricRecord.Builder clearRevisionId() {
      revisionId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public UserTableMetricRecord build() {
      try {
        UserTableMetricRecord record = new UserTableMetricRecord();
        record.delta = fieldSetFlags()[0] ? this.delta : (java.lang.Long) defaultValue(fields()[0]);
        record.deltaNoTemplates = fieldSetFlags()[1] ? this.deltaNoTemplates : (java.lang.Long) defaultValue(fields()[1]);
        record.isReverted = fieldSetFlags()[2] ? this.isReverted : (java.lang.Boolean) defaultValue(fields()[2]);
        record.isReverting = fieldSetFlags()[3] ? this.isReverting : (java.lang.Boolean) defaultValue(fields()[3]);
        record.isOnlyInTemplates = fieldSetFlags()[4] ? this.isOnlyInTemplates : (java.lang.Boolean) defaultValue(fields()[4]);
        record.timestamp = fieldSetFlags()[5] ? this.timestamp : (java.lang.Long) defaultValue(fields()[5]);
        record.revisionId = fieldSetFlags()[6] ? this.revisionId : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
